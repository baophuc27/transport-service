# image: openjdk:11
# services:
#  - docker:19-dind

stages:
#  - build
#  - build docker image
 - deploy

# before_script:
#  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

# variables:
#   DOCKER_IMAGE_NAME: reeco-dmp

# build:
#   stage: build
#   script:
#     - cd services/core-service
#     - ./gradlew clean build
#   artifacts:
#     paths:
#       - services/core-service/configuration/build/libs/*.jar
#   only:
#     - deployment

# docker build:
#   image: docker:stable
#   stage: build docker image
#   variables:
#     DOCKER_HOST: tcp://docker:2375/
#     DOCKER_DRIVER: overlay2
#     DOCKER_TLS_CERTDIR: ""
#   before_script:
#    - export IMAGE_TAG=${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_NAME##*/}-${CI_COMMIT_SHORT_SHA}
#    - echo "Building docker image for $IMAGE_TAG"
#   script:
#    - apk add docker-compose
#    - docker-compose build
#   only:
#     - deployment

deploy:
  image: ubuntu:latest
  stage: deploy
  before_script:
   - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
   - eval $(ssh-agent -s)
   - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - mkdir -p ~/.ssh
   - chmod 700 ~/.ssh
   - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
   - export IMAGE_TAG=${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_NAME##*/}-${CI_COMMIT_SHORT_SHA}
   - echo "Deploying docker image $IMAGE_TAG to $CI_COMMIT_REF_NAME"
  script:
    - ssh SSH_USERNAME@$SSH_HOST
    - sudo docker system prune -a -f
    - cd services/core-service
    - ./gradlew clean build
    - cd ~/reco-dmp/services
    - sudo docker-compose down
    - sudo docker-compose up -d --build core-service
  only:
    - deployment
