version: '3.9'

# Define services
services:
  configservice:
    build:
      context: .
      dockerfile: dockerfile-config-service
      args:
        VERSION: 0.1.0
    container_name: reeco-dmp-config-service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    network_mode: host
    restart: always
    healthcheck:
      test: "curl --fail --silent localhost:8986/actuator/health | grep UP || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
#    ports:
#    - 8986:8986

  ingestionservice:
    build:
      context: .
      dockerfile: dockerfile-ingestion-service
      args:
        VERSION: 0.1.0
    network_mode: host
    container_name: reeco-dmp-ingestion-service
    environment:
      CASSANDRA_KEYSPACE: ${CASSANDRA_KEYSPACE}
      CASSANDRA_USER: ${CASSANDRA_USER}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD}
      CASSANDRA_CONTACT_POINTS: ${CASSANDRA_CONTACT_POINTS}
      CASSANDRA_PORT: ${CASSANDRA_PORT}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TS_EVENT_GROUP_ID: ${KAFKA_TS_EVENT_GROUP_ID}
      KAFKA_CONFIG_EVENT_GROUP_ID: ${KAFKA_CONFIG_EVENT_GROUP_ID}
      KAFKA_CONFIG_AUTO_OFFSET_RESET: ${KAFKA_CONFIG_AUTO_OFFSET_RESET}
      KAFKA_TS_EVENT_AUTO_OFFSET_RESET: ${KAFKA_TS_EVENT_AUTO_OFFSET_RESET}
      KAFKA_MAX_CONCURRENCY: ${KAFKA_MAX_CONCURRENCY}
      KAFKA_TS_EVENT_TOPIC_PARTITIONS: ${KAFKA_TS_EVENT_TOPIC_PARTITIONS}
      KAFKA_TS_EVENT_TOPIC_REPLICATIONS: ${KAFKA_TS_EVENT_TOPIC_REPLICATIONS}
      KAFKA_CONFIG_TOPIC_PARTITIONS: ${KAFKA_CONFIG_TOPIC_PARTITIONS}
      KAFKA_CONFIG_TOPIC_REPLICATIONS: ${KAFKA_CONFIG_TOPIC_REPLICATIONS}
      KAFKA_ALARM_TOPIC_PARTITIONS: ${KAFKA_ALARM_TOPIC_PARTITIONS}
      KAFKA_ALARM_TOPIC_REPLICATIONS: ${KAFKA_ALARM_TOPIC_REPLICATIONS}
      KAFKA_ALARM_NOTI_TOPIC_PARTITIONS: ${KAFKA_ALARM_NOTI_TOPIC_PARTITIONS}
      KAFKA_ALARM_NOTI_TOPIC_REPLICATIONS: ${KAFKA_ALARM_NOTI_TOPIC_REPLICATIONS}
    restart: always
    healthcheck:
      test: "curl --fail --silent localhost:8086/actuator/health | grep UP || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

  coreservice:
    build:
      context: .
      dockerfile: dockerfile-core-service
      args:
        VERSION: 0.1.0
    container_name: reeco-dmp-core-service
    network_mode: host
    healthcheck:
      test: "curl --fail --silent localhost:7001/actuator/health | grep UP || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ../uploads:/uploads
    environment:
      CASSANDRA_KEYSPACE: ${CASSANDRA_KEYSPACE}
      CASSANDRA_USER: ${CASSANDRA_USER}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD}
      CASSANDRA_CONTACT_POINTS: ${CASSANDRA_CONTACT_POINTS}
      CASSANDRA_PORT: ${CASSANDRA_PORT}
    restart: always
#    ports:
#      - 7001:7001

  httptransportservice:
    build:
      context: .
      dockerfile: dockerfile-http-transport-service
      args:
        VERSION: 0.1.0
    container_name: reeco-dmp-http-transport-service
    network_mode: host
    healthcheck:
      test: "curl --fail --silent localhost:8043/actuator/health | grep UP || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      CASSANDRA_KEYSPACE: ${CASSANDRA_KEYSPACE}
      CASSANDRA_USER: ${CASSANDRA_USER}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD}
      CASSANDRA_CONTACT_POINTS: ${CASSANDRA_CONTACT_POINTS}
      CASSANDRA_PORT: ${CASSANDRA_PORT}
      KAFKA_CONFIG_EVENT_GROUP_ID: ${KAFKA_CONFIG_EVENT_HTTP_GROUP_ID}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CONFIG_AUTO_OFFSET_RESET: ${KAFKA_CONFIG_AUTO_OFFSET_RESET}
    restart: always
  
  transportservice:
    build:
      context: .
      dockerfile: dockerfile-transport-service
      args:
        VERSION: 0.1.0
    container_name: reeco-dmp-transport-service
    network_mode: host
    environment:
      KAFKA_CONFIG_EVENT_GROUP_ID: ${KAFKA_CONFIG_EVENT_HTTP_GROUP_ID}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CONFIG_AUTO_OFFSET_RESET: ${KAFKA_CONFIG_AUTO_OFFSET_RESET}
    restart: always
    healthcheck:
      test: "curl --fail --silent localhost:8111/actuator/health | grep UP || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

