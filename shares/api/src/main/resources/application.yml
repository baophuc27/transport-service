api:
  common:
    version: -1.0.0
    title: View services API
    description: Open Api for internal communiaction
    termsOfServiceUrl: Future Update
    license: Future Update
    licenseUrl: Future Update

    contact:
      name: Nan
      url: Nan
      email: Nan@cannotcontact.com
  view:
    get-view:
      description: Returns a details view of the specified view id.
      notes: |
        # Normal response
        If the requested  id is found the method will return information regarding:
        1. View detail information
        1. List of Users that own the view
        1. List of Categories that is tailored for the view.
        1. Service Addresses (technical information regarding the addresses of the microservices that created the response)

        # Expected partial and error responses
        1. If no viewId information is found, a <b>404 - Not Found</b> error will be returned
        1. In no Categories or Users are found for a view, a partial response will be returned

    create-view:
      description: Creates a view.
      notes: |
        # Normal response
        The information posted to the API will be stored to the view service's db.

        # Expected error responses
        1. If a view with the same viewId as specified in the posted information already exists,
        an <b>422 - Unprocessable Entity</b> error with a "duplicate key" error message will be returned

    delete-view:
      description: Deletes a view
      notes: |
        # Normal response
        Entities for view information, categories related to the specificed viewId will be deleted.
        The implementation of the delete method is idempotent, i.e. it can be called several times with the same response.
        This means that a delete request of a non existing view will return <b>200 Ok</b>.



server.port: 7000

server.error.include-message: always

spring.data.mongodb:
  host: localhost
  port: 27017
  database: view-db

logging:
  level:
    root: INFO
    com.marvin: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---
spring.profiles: docker

server.port: 7001

spring.data.mongodb.host: mongodb










